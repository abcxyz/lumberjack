name: CI - Build

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  GOMAXPROCS: 7
  PROJECT_ID: 'lumberjack-dev-infra'
  REGISTRY: 'us-docker.pkg.dev'
  REPO: 'us-docker.pkg.dev/lumberjack-dev-infra/images/lumberjack'
  TAG: "${{ github.ref_type == 'branch' && github.sha || github.ref_name }}"

# If a new commit comes in, cancel the current action run.
concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build:
    name: Build
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      # Cache go dependencies to reduce time for CI setup
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-test-
            ${{ runner.os }}-go-

      - id: auth
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: 'projects/638387980668/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'gh-access-sa@lumberjack-dev-infra.iam.gserviceaccount.com'
          token_format: 'access_token'

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.REGISTRY }}'

      - name: Build and Push Container
        run: |
          ./clients/go/scripts/build.sh
