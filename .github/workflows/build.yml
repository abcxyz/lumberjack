name: 'build'

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
    workflow_dispatch:
      inputs:
        tag:
          description: 'Tag to apply to the Docker image. If unspecified, defaults to the latest SHA.'
          type: 'string'
          default: ''

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  # TODO(yolocs): remove once pkg repo is public.
  GOPRIVATE: github.com/abcxyz/pkg

jobs:
  build:
    env:
      PROJECT_ID: 'lumberjack-dev-infra'
      PROJECT_NUMBER: '638387980668'
      REGISTRY: 'us-docker.pkg.dev'
      REPO: 'us-docker.pkg.dev/lumberjack-dev-infra/images/lumberjack'
      TAG: "${{ github.event.inputs.tag || github.ref_type == 'branch' && github.sha || github.ref_name }}"

    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: 'ubuntu-latest'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b' # ratchet:actions/checkout@v3

      - name: 'Setup Go'
        uses: 'actions/setup-go@fcdc43634adb5f7ae75a9d7a9b9361790f7293e2' # ratchet:actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: 'Cache dependencies'
        uses: 'actions/cache@48af2dc4a9e8278b89d7fa154b955c30c6aaab09' # ratchet:actions/cache@v3
        with:
          path: |-
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |-
            ${{ runner.os }}-go-
            ${{ runner.os }}-go-test-

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@ceee102ec2387dd9e844e01b530ccd4ec87ce955' # ratchet:google-github-actions/auth@v0
        with:
          workload_identity_provider: 'projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'gh-access-sa@lumberjack-dev-infra.iam.gserviceaccount.com'
          token_format: 'access_token'

      - name: 'Authenticate to Artifact Registry'
        uses: 'docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b' # ratchet:docker/login-action@v2
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.REGISTRY }}'

      - name: 'Build and push container'
        run: |-
          ./scripts/build_server.sh
