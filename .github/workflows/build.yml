name: 'build'
on:
  workflow_run:
    workflows: [unit, lint]
    types:
      - completed
    branches:
      - '**'

env:
  docker_registry: 'us-docker.pkg.dev'
  docker_tag: '${{ github.sha }}'
  docker_repo: 'us-docker.pkg.dev/lumberjack-dev-infra/images'
  wif_provider: 'projects/638387980668/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
  wif_service_account: 'gh-access-sa@lumberjack-dev-infra.iam.gserviceaccount.com'

jobs:
  # Short circuit this workflow so that the next workflow in the chain doesn't run
  on-failure:
    runs-on: 'ubuntu-latest'
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: 'abort'
        run: exit 1

  build-lumberjack-server:
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b' # ratchet:actions/checkout@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@ceee102ec2387dd9e844e01b530ccd4ec87ce955' # ratchet:google-github-actions/auth@v0
        with:
          workload_identity_provider: '${{ env.wif_provider }}'
          service_account: '${{ env.wif_service_account }}'
          token_format: 'access_token'
      - name: 'Authenticate to Artifact Registry'
        uses: 'docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b' # ratchet:docker/login-action@v2
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.docker_registry }}'
      - name: 'Build the main server container and push to the registry'
        uses: 'docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94' # ratchet:docker/build-push-action@v3
        with:
          push: true
          tags: '${{ env.docker_repo }}/lumberjack-server:${{ env.docker_tag }}'
          file: 'scripts/server.dockerfile'
      - id: 'set_output'
        run: |-
          echo "::set-output name=image_server::${{ env.docker_repo }}/lumberjack-server:${{ env.docker_tag }}"

  build-go-grpc-client:
    runs-on: 'ubuntu-latest'
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      prefix: 'ljc'
      lang: 'go'
      type: 'grpc'
      file: './clients/go/test/grpc-app/Dockerfile'
      run_from: './'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b' # ratchet:actions/checkout@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@ceee102ec2387dd9e844e01b530ccd4ec87ce955' # ratchet:google-github-actions/auth@v0
        with:
          workload_identity_provider: '${{ env.wif_provider }}'
          service_account: '${{ env.wif_service_account }}'
          token_format: 'access_token'
      - name: 'Authenticate to Artifact Registry'
        uses: 'docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b' # ratchet:docker/login-action@v2
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.docker_registry }}'
      - name: 'Build the integration test server container and push to the registry'
        uses: 'docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94' # ratchet:docker/build-push-action@v3
        with:
          push: true
          tags: '${{ env.docker_repo }}/${{env.prefix}}-${{env.lang}}-${{env.type}}:${{env.docker_tag}}'
          file: '${{ env.file }}'
          context: '${{ env.run_from }}'

  build-go-http-client:
    runs-on: 'ubuntu-latest'
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      prefix: 'ljc'
      lang: 'go'
      type: 'http'
      file: './clients/go/test/shell/Dockerfile'
      run_from: './'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b' # ratchet:actions/checkout@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@ceee102ec2387dd9e844e01b530ccd4ec87ce955' # ratchet:google-github-actions/auth@v0
        with:
          workload_identity_provider: '${{ env.wif_provider }}'
          service_account: '${{ env.wif_service_account }}'
          token_format: 'access_token'
      - name: 'Authenticate to Artifact Registry'
        uses: 'docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b' # ratchet:docker/login-action@v2
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.docker_registry }}'
      - name: 'Build the integration test server container and push to the registry'
        uses: 'docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94' # ratchet:docker/build-push-action@v3
        with:
          push: true
          tags: '${{ env.docker_repo }}/${{env.prefix}}-${{env.lang}}-${{env.type}}:${{env.docker_tag}}'
          file: '${{ env.file }}'
          context: '${{ env.run_from }}'

  build-java-grpc-client:
    runs-on: 'ubuntu-latest'
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      prefix: 'ljc'
      lang: 'java'
      type: 'grpc'
      file: './clients/java-logger/scripts/server_app.dockerfile'
      run_from: './'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b' # ratchet:actions/checkout@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@ceee102ec2387dd9e844e01b530ccd4ec87ce955' # ratchet:google-github-actions/auth@v0
        with:
          workload_identity_provider: '${{ env.wif_provider }}'
          service_account: '${{ env.wif_service_account }}'
          token_format: 'access_token'
      - name: 'Authenticate to Artifact Registry'
        uses: 'docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b' # ratchet:docker/login-action@v2
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.docker_registry }}'
      - name: 'Build the integration test server container and push to the registry'
        uses: 'docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94' # ratchet:docker/build-push-action@v3
        with:
          push: true
          tags: '${{ env.docker_repo }}/${{env.prefix}}-${{env.lang}}-${{env.type}}:${{env.docker_tag}}'
          file: '${{ env.file }}'
          context: '${{ env.run_from }}'

  build-java-http-client:
    runs-on: 'ubuntu-latest'
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      prefix: 'ljc'
      lang: 'java'
      type: 'http'
      file: './clients/java-logger/scripts/shell_app.dockerfile'
      run_from: './'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b' # ratchet:actions/checkout@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@ceee102ec2387dd9e844e01b530ccd4ec87ce955' # ratchet:google-github-actions/auth@v0
        with:
          workload_identity_provider: '${{ env.wif_provider }}'
          service_account: '${{ env.wif_service_account }}'
          token_format: 'access_token'
      - name: 'Authenticate to Artifact Registry'
        uses: 'docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b' # ratchet:docker/login-action@v2
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.docker_registry }}'
      - name: 'Build the integration test server container and push to the registry'
        uses: 'docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94' # ratchet:docker/build-push-action@v3
        with:
          push: true
          tags: '${{ env.docker_repo }}/${{env.prefix}}-${{env.lang}}-${{env.type}}:${{env.docker_tag}}'
          file: '${{ env.file }}'
          context: '${{ env.run_from }}'