name: CI

on:
  push:
    branches:
    - main
    - actions-experiment
  pull_request:
    branches:
    - main
  schedule:
    - cron: '0 0 */1 * *'

env:
  GOMAXPROCS: 7

# If a new commit comes in, cancel the current action run.
concurrency:
  group: '${{github.workflow}}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      # Cache go dependencies to reduce time for CI setup
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-test-
            ${{ runner.os }}-go-

      - name: Run Build Script
        run: |
          cd ${{ github.workspace }}
          ./build.sh

      # TODO(crwilcox): Coverage has an issue right now with a module
      # cover: no required module provides package github.com/abcxyz/lumberjack/clients/go/pkg/audit:
      # go.mod file not found in current directory or any parent directory; see 'go help modules'
      # - name: go-coverage
      #   shell: bash
      #   run: |-
      #     OUTPUT="$(go tool cover -func=./clients/go/coverage.out)"
      #     TOTAL="$(echo $OUTPUT | awk 'END{print $NF}')"
      #     echo "::group::Coverage (${TOTAL})"
      #     echo "${OUTPUT}"
      #     echo "::endgroup::"


      # if running the build script succeeded, we can move on to integration tests.

  # TODO(crwilcox): enable once we have WorkloadIdentity setup.
  integrationTest:
    # wait to start this until we have a sucessful test run
    # TODO: add needs test back
    # needs: test
    name: Integration Tests
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      # Cache go dependencies to reduce time for CI setup
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-test-
            ${{ runner.os }}-go-

      - name: Run Build Script
        run: |
          cd ${{ github.workspace }}
          ./build.sh

      - id: gcloud
        uses: google-github-actions/setup-gcloud@v0

      - id: auth
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: 'projects/638387980668/locations/global/workloadIdentityPools/gh-pool/providers/gh-provider'
          service_account: 'gh-access-sa@lumberjack-dev-infra.iam.gserviceaccount.com'
          create_credentials_file: true
          activate_credentials_file: true
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Use gcloud CLI
        run: gcloud info
    
      # TODO: Wait until we can use the workload identity
      - name: Run Integration Build Script
        run: |
          # gcloud config set account gh-access-sa@lumberjack-dev-infra.iam.gserviceaccount.com
          cd ${{ github.workspace }}
          ./scripts/integration_build.sh

  # TODO(crwilcox): enable this once the code passes lint.
  # lint: 
  #   name: lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v2
  #       with:
  #         working-directory: clients/go